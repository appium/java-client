# Gradle
# Build your Java project and run tests with Gradle using a Gradle wrapper script.
# Add steps that analyze code, save build artifacts, deploy, and more:
# https://docs.microsoft.com/azure/devops/pipelines/languages/java

pool:
  vmImage: 'macos-11'

variables:
  ANDROID_EMU_NAME: test
  ANDROID_EMU_ABI: x86
  ANDROID_EMU_TARGET: android-28
  ANDROID_EMU_TAG: default
  XCODE_VERSION: 13.2
  IOS_PLATFORM_VERSION: 15.2
  IOS_DEVICE_NAME: iPhone X
  NODE_VERSION: 16.x
  JDK_VERSION: 1.8

jobs:
- job: Android_E2E_Tests
  steps:
  - template: .azure-templates/bootstrap_steps.yml
  - script: $NVM_DIR/versions/node/`node --version`/bin/appium driver install uiautomator2
    displayName: Install UIA2 driver
  - script: |
      echo "y" | $ANDROID_HOME/tools/bin/sdkmanager --install 'system-images;$(ANDROID_EMU_TARGET);$(ANDROID_EMU_TAG);$(ANDROID_EMU_ABI)'
      echo "no" | $ANDROID_HOME/tools/bin/avdmanager create avd -n "$(ANDROID_EMU_NAME)" -k 'system-images;$(ANDROID_EMU_TARGET);$(ANDROID_EMU_TAG);$(ANDROID_EMU_ABI)' --force
      echo $ANDROID_HOME/emulator/emulator -list-avds

      echo "Starting emulator"
      nohup $ANDROID_HOME/emulator/emulator -avd "$(ANDROID_EMU_NAME)" -no-snapshot -delay-adb > /dev/null 2>&1 &
      $ANDROID_HOME/platform-tools/adb wait-for-device
      $ANDROID_HOME/platform-tools/adb devices -l
      echo "Emulator started"
    displayName: Emulator configuration
  - task: Gradle@2
    inputs:
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: "$(JDK_VERSION)"
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      tasks: 'build'
      options: 'uiAutomationTest -x test'
- job: iOS_E2E_Tests
#  timeoutInMinutes: '90'
  steps:
  - template: .azure-templates/bootstrap_steps.yml
  - script: |
      sudo xcode-select -s /Applications/Xcode_$(XCODE_VERSION).app/Contents/Developer
      xcrun simctl list
    displayName: Simulator configuration
  - script: $NVM_DIR/versions/node/`node --version`/bin/appium driver install xcuitest
    displayName: Install XCUITest driver
  - task: Gradle@2
    inputs:
      gradleWrapperFile: 'gradlew'
      gradleOptions: '-Xmx3072m'
      javaHomeOption: 'JDKVersion'
      jdkVersionOption: "$(JDK_VERSION)"
      jdkArchitectureOption: 'x64'
      publishJUnitResults: true
      tasks: 'build'
      options: 'xcuiTest -x test'
- job: Misc_Tests
  steps:
    - task: Gradle@2
      inputs:
        gradleWrapperFile: 'gradlew'
        gradleOptions: '-Xmx3072m'
        javaHomeOption: 'JDKVersion'
        jdkVersionOption: "$(JDK_VERSION)"
        jdkArchitectureOption: 'x64'
        publishJUnitResults: true
        tasks: 'build'
        options: 'miscTest -x test -x signMavenJavaPublication'
